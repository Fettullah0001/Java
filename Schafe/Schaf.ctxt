#BlueJ class context
comment0.target=Schaf
comment0.text=\r\n\ @author\ (Fettullah)\ \r\n
comment1.params=name
comment1.target=Schaf(java.lang.String)
comment10.params=
comment10.target=void\ sprechen()
comment10.text=\r\n\ Schaf\ kann\ sprechen\r\n\ Wenn\ hungrig\ und\ gl\u00FCcklich\ \u201EIch\ bin\ gl\u00FCcklich,\ aber\ was\ zu\ fressen\ w\u00E4re\ sch\u00F6n\u201C\r\n\ Wenn\ hungrig\ und\ ungl\u00FCcklich\ \u2013\u201EDu\ musst\ dir\ besser\ \u00FCberlegen\ ob\ du\ ein\ Schaf\ besitzen\ sollst.\ B\u00E4\u00E4\u00E4\u00E4\u00E4hhhhhh\u201C\r\n\ Wenn\ nicht\ hungrig\ und\ gl\u00FCcklich\ \u201EDanke\ dir\!\ Du\ bist\ der\ Beste\!\u201C\r\n\ Ansonsten\ \u201EB\u00E4\u00E4\u00E4\u00E4\u00E4hhhhhh\u201C\r\n
comment11.params=werktag\ urlaub
comment11.target=boolean\ ausschalfen(boolean,\ boolean)
comment11.text=\r\n\ Schaf\ kann\ ausschlafen,\ daf\u00FCr\ schreiben\ wir\ die\ Methode\ boolean\ ausschlafen(boolean\ werktag,boolean\ urlaub)\r\n\ Es\ schl\u00E4ft\ aus,\ wenn\ es\ kein\ Werktag\ ist\ oder\ es\ ist\ im\ Urlaub.\r\n
comment12.params=a\ b
comment12.target=int\ schafAddiert(int,\ int)
comment12.text=\r\n\ Schaf\ kann\ addieren,\ returns\ die\ Summe\ von\ a\ und\ b,\r\n\ aber\ wenn\ a\ und\ b\ gleich\ sind\ wird\ die\ Summe\ von\ beiden\ verdoppelt\ und\ returns.\r\n
comment13.params=n
comment13.target=int\ diff21(int)
comment13.text=\r\n\ Schaf\ kann\ Differenz\ zur\ 21\ berechnen.\r\n\ Wenn\ n\ gr\u00F6\u00DFer\ 21\ ist\ wird\ Differenz\ verdoppelt.\r\n
comment14.params=a\ b
comment14.target=boolean\ makes10(int,\ int)
comment14.text=\r\n\ Schaf\ methode\ returns\ true\ wenn\ parameter\ a\ oder\ b\ oder\ die\ Summe\ von\ den\ Zahlen\ 10\ ergibt.\r\n
comment15.params=
comment15.target=void\ durchschnittFuttermenge()
comment15.text=\r\n\ Berechne\ die\ durchschnittliche\ Futtermenge\r\n
comment16.params=
comment16.target=int\ getEnergie()
comment16.text=\r\n\ Get\ Energie\ Methode\r\n
comment17.params=
comment17.target=void\ fuetternVoll()
comment17.text=\r\n\ Schreibt\ eine\ Methode,\ wo\ das\ Schaf\ voll\ (Energie\ \=\ 100)\ gef\u00FCttert\ wird\r\n
comment18.params=monat\ jahr
comment18.target=int\ tageProMonat(int,\ int)
comment18.text=\r\n\ Schaf\ z\u00E4hlt\ Tage.\ F\u00FCr\ einen\ Monat\ im\ Jahr.\ Benutzt\ werden\ soll\ eine\ Switch-Anweisung.\r\n
comment19.params=s
comment19.target=boolean\ enthaeltVokal(java.lang.String)
comment19.text=\r\n\ Gibt\ an,\ ob\ die\ Zeichenkette\ einen\ Vokal\ enthaelt.\r\n
comment2.params=
comment2.target=int\ getalter()
comment20.params=s
comment20.target=boolean\ istPalindrom(java.lang.String)
comment20.text=\r\n\ Diese\ Methode\ liefert\ true,\ wenn\ der\ \u00FCbergebene\ String\ ein\ Palindrom\ ist,sonst\ false.\r\n\ @param\ s\ ein\ beliebiger\ String,\ darf\ nicht\ null\ sein\r\n
comment21.params=vonChar\ inString
comment21.target=int\ anzahlAuftreten(char,\ java.lang.String)
comment21.text=\r\n\ Liefert\ fuer\ einen\ uebergebenen\ String\ die\ Anzahl\ der\ Auftreten\ des\ ebenfalls\ uebergebenen\ Zeichens\ innerhalb\ des\ Strings.\r\n\ @param\ vonChar\ das\ Zeichen,\ dessen\ Auftreten\ gezaehlt\ werden\ soll\ \r\n\ @param\ inString\ der\ String,\ in\ dem\ gezaehlt\ werden\ soll\r\n
comment22.params=wort
comment22.target=java.lang.String\ nurVokale(java.lang.String)
comment22.text=\r\n\ Liefert\ nur\ die\ Vokale\ der\ uebergebenen\ Zeichenkette.\ Fuer\ den\ Parameter\ "HAllo\ Welt\!"\ liefert\ diese\ Methode\ beispielweise\ den\ String\ "Aoe".\r\n\ @param\ eine\ beliebige\ Zeichenkette;\ darf\ nicht\ null\ sein\ und\ keine\ Umlaute\ enthalten.\r\n
comment23.params=s
comment23.target=java.lang.String\ entferneVokale(java.lang.String)
comment23.text=\r\n\ Liefert\ eine\ neue\ Zeichenkette\ aus\ der\ alle\ Vokale\ entfernt\ wurden.\ Fuer\ den\ Parameter\ "Hallo\ Welt\!"\ liefert\ diese\ Methode\ beispielweise\ den\ String\ "Hll\ Wlt\!".\ \r\n\ @param\ eine\ beliebige\ Zeichenkette;\ darf\ nicht\ null\ sein\ und\ keine\ Umlaute\ enthalten.\r\n
comment24.params=s
comment24.target=boolean\ enthaeltDoppelzeichen(java.lang.String)
comment24.text=\r\n\ Gibt\ an,\ ob\ in\ einer\ Zeichenkette\ mindestens\ ein\ Zeichen,\ direkt\ aufeinander\ folgend,\ doppelt\ vorkommt.\ \r\n\ @param\ eine\ beliebige\ Zeichenkette,\ darf\ nicht\ null\ sein.\r\n
comment3.params=
comment3.target=int\ getenergie()
comment4.params=
comment4.target=boolean\ getlebendig()
comment5.params=
comment5.target=void\ altern()
comment5.text=\ \r\n\ Methode\ altern\:\ Das\ Schaf\ wird\ ein\ Jahr\ \u00E4lter\ und\ verliert\ 10\ hunger\ \r\n
comment6.params=menge
comment6.target=void\ fuettern(int)
comment6.text=\r\n\ Methode\ fuettern\:\ Erh\u00F6ht\ die\ Energie\ des\ Schafs.\r\n
comment7.params=kraft
comment7.target=void\ schlagen(int)
comment7.text=\r\n\ Man\ kann\ das\ Schaf\ schlagen\u2026\ (unterschiedlich\ kr\u00E4ftig)\r\n
comment8.params=
comment8.target=boolean\ getgluecklich()
comment8.text=\r\n\ Fragen\ ob\ das\ Schaf\ gl\u00FCcklich\ ist.\ \u00D6fter\ gegessen\ als\ geschlagen\r\n
comment9.params=
comment9.target=boolean\ gethungrig()
comment9.text=\r\n\ Schaf\ kann\ Hunrig\ werden.\ Wenn\ Energie\ <\ 50.\r\n
numComments=25
