#BlueJ class context
comment0.target=FelderStall
comment0.text=\r\n\ \r\n\ @author\ Fettullah\r\n
comment1.params=
comment1.target=FelderStall()
comment10.params=kuh
comment10.target=void\ setzeKuh(Kuh)
comment10.text=\r\n\ Wenn\ Vier\ Kuehe\ im\ Stall\ sind.\ Schalfen\ Sie\ und\ gehen\ aus\ dem\ Stall.\r\n
comment11.params=
comment11.target=void\ entferneAlleKuehe()
comment11.text=\r\n\ entfernt\ alle\ Kuehe\ aus\ dem\ Stall.\r\n
comment2.params=schaf
comment2.target=void\ setzeSchaf(Schaf)
comment2.text=\r\n\ besetzt\ das\ n\u00E4chste\ freie\ Schafs\ Feld.\ Ist\ kein\ Feld\ mehr\ frei,\ wird\ der\ Methodenaufruf\ ignoriert\r\n
comment3.params=menge
comment3.target=void\ fuettereSchafe(int)
comment3.text=\r\n\ Mit\ fuettereSchafe\ (int\ menge)\ f\u00FCttert\ man\ alle\ schon\ belegten\ Schafe\r\n
comment4.params=
comment4.target=void\ schafStallFuettern()
comment4.text=\r\n\ Das\ volle\ Schaf\ Stall\ wird\ gefuetert.\ durch\ aufruf\ der\ Methode\ fuettereSchafe\ mit\ eine\ menge\ 10.\r\n
comment5.params=
comment5.target=Schaf\ gibSchwaechstesSchaf()
comment5.text=\r\n\ Die\ Methode\ gibSchwaechstesSchaf\ ()\ gibt\ das\ schw\u00E4chste\ der\ drei\ Schafe\ zur\u00FCck.\ \r\n\ Gibt\ es\ kein\ belegtes\ Schafs\ Feld\ wird\ null\ zur\u00FCckgegeben.\ \r\n\ (In\ diesem\ Fall\ ist\ das\ das\ Schaf,\ das\ am\ wenigsten\ Energie\ hat)\r\n
comment6.params=schaf1\ schaf2
comment6.target=Schaf\ gibSchwaecheresSchaf(Schaf,\ Schaf)
comment7.params=
comment7.target=void\ entferneSchaf()
comment7.text=\r\n\ Die\ Methode\ entferneSchaf\ ()\ entfernt\ die\ Belegung\ des\ zuerst\ belegten\ Schafs\ Feld\r\n
comment8.params=
comment8.target=Schaf\ gibStaerkstesSchaf()
comment8.text=\r\n\ Die\ Methode\ gibStaerkstesSchaf\ ()\ gibt\ das\ st\u00E4rkste\ der\ drei\ Schafe\ zur\u00FCck.\r\n\ Gibt\ es\ kein\ belegtes\ Schafs\ Feld\ wird\ null\ zur\u00FCckgegeben\r\n
comment9.params=schaf1\ schaf2
comment9.target=Schaf\ gibStaerkeresSchaf(Schaf,\ Schaf)
numComments=12
